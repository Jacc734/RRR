#!/usr/bin/env python
import unittest

#import sys, os
#sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), '..'))
from utils.exploit_utils import ExploitUtils

# Execute 'python -m unittest discover -v' to execute all tests from project

class TestExploitUtils(unittest.TestCase):

    def test_create_pattern__pattern_content(self):
        args = {'create_pattern': ['3']}
        pattern = ExploitUtils.create_pattern(args)
        self.assertEqual(pattern, 'Aa0')
        
        args = {'create_pattern': []}
        pattern = ExploitUtils.create_pattern(args)
        self.assertEqual(pattern[len(pattern) - 3::], 'Zz9')
        
        args = {'create_pattern' : ['extended']}
        pattern = ExploitUtils.create_pattern(args)
        self.assertEqual(pattern[len(pattern) - 3::], 'Zz%')
    
    def test_create_pattern__pattern_size(self):
        args = {'create_pattern' : ['42']}
        pattern = ExploitUtils.create_pattern(args)
        self.assertEqual(len(pattern), 42)
        
        args = {'create_pattern': []}
        pattern = ExploitUtils.create_pattern(args)
        self.assertEqual(len(pattern), 3*10*26**2)

        args = {'create_pattern' : ['extended']}
        pattern = ExploitUtils.create_pattern(args)
        self.assertEqual(len(pattern), 3*30*26**2)

    def test_pattern_offset__pattern_pos(self):
        args = {'pattern_offset' : ['Aa0']}
        pos = ExploitUtils.pattern_offset(args)
        self.assertEqual(pos, 0)

        args = {'pattern_offset' : ['Zz9']}
        pos = ExploitUtils.pattern_offset(args)
        self.assertEqual(pos, 3*10*26**2 - 3)
        
        args = {'pattern_offset' : ['0x41613041']}
        pos = ExploitUtils.pattern_offset(args) # Aa0A in hex
        self.assertEqual(pos, 0)

        args = {'pattern_offset' : ['0x385a7a39']}
        pos = ExploitUtils.pattern_offset(args) # 8Zz9 in hex
        self.assertEqual(pos, 3*10*26**2 - 4)
        
        args = {'pattern_offset' : ['0x7a375a7a385a7a39']}
        pos = ExploitUtils.pattern_offset(args) # 8Zz9 in hex
        self.assertEqual(pos, 3*10*26**2 - 8)

        args = {'pattern_offset' : ['0x385a7a3z']}
        pos = ExploitUtils.pattern_offset(args) # 0x and not hex
        self.assertEqual(pos, None)



if __name__ == '__main__':
    unittest.main()
