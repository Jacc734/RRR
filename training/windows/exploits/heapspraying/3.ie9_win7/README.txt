	[IE9_PRECISE_1]

1. Execute:
	- $ cd "C:\Documents and Settings\Administrator\Desktop\lacon2k14"
	- $ python -m SimpleHTTPServer 8080

2. Open http://127.0.0.1/ie9_precise_1.html and attach to it with WinDBG

3. Search for for unicode string "TEST":
	- $ s -u 0 0x5000000 "TEST"
	[*] We see that heap is not filled with our chunks!

What happens? Exploit mitigation technique to detect heap sprays.



	[IE9_PRECISE_2]

6. Open http://127.0.0.1/ie9_precise_2.html and attach to it with WinDBG
	[*] Now each chunk is build dynamically to add randomness

7. Search for for unicode string "TEST":
	-  s -u 0 L?5000000 "TEST"
	[*] We can see that all chunks have the same size 0x4000 and are ALIGNED!
	[*] BUT, it seems that there is a BIIG hole without allocations.
		It might be because of concatenation & substring doesn't allocate in the heap? (Chris Valasek talk)
		AND THE ALLOCATIONS ARE NOT FROM HEAP RANGE (NEVER)! So this is a WTF! Don't know if one can really jump there... is realiable? always same mapped pages?
		[-] Take one chunk and see that "!heap -p -a <chunk_addr>" doesn't return anything
		So better take a better approach!



	[IE9_PRECISE_3]

8. Open http://127.0.0.1/ie9_precise_3.html and attach to it with WinDBG
	[*] Now the spray is done with tag elements.
	
9. Go to address 3716200c to show that the payload starts there!


===========


Stable spray by corelan:
https://www.corelan.be/index.php/2013/02/19/deps-precise-heap-spray-on-firefox-and-ie10/

